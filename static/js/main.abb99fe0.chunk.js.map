{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","App","users","useState","setTitle","setUserId","titleError","setTitleError","userError","setUserError","usersFromServer","todosFromServer","find","setTodos","action","method","onSubmit","event","preventDefault","newTodo","Math","max","prevTodos","htmlFor","value","type","placeholder","onChange","newTitle","target","replace","newUserId","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abb99fe0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const setTodosWithUsers = (addTodos: Todo[], users: User[]): Todo[] => {\n    return addTodos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n  };\n\n  const [todos, setTodos] = useState(\n    setTodosWithUsers(todosFromServer, usersFromServer),\n  );\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let newTitle = event.target.value;\n\n    newTitle = newTitle.replace(/[^a-zA-Zа-щА-ЩьЬюЮяЯіІїЇєЄґҐ0-9 ]+/g, '');\n\n    setTitle(newTitle);\n\n    if (newTitle) {\n      setTitleError(false);\n    }\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newUserId = +event.target.value;\n\n    setUserId(newUserId);\n\n    if (newUserId !== 0) {\n      setUserError(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (userId === 0) {\n      setUserError(true);\n    }\n\n    if (title && userId !== 0) {\n      const maxId = Math.max(...todos.map(todo => todo.id));\n\n      const newTodo: Todo = {\n        id: maxId + 1,\n        title,\n        completed: false,\n        userId,\n        user: usersFromServer.find(user => user.id === userId),\n      };\n\n      setTodos(prevTodos => [...prevTodos, newTodo]);\n\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            {'Title:  '}\n          </label>\n          <input\n            name=\"title\"\n            value={title}\n            id=\"title\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            onChange={handleTitleChange}\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            {'User:  '}\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}